#!/bin/bash



branches=(
    3.3
    3.3-devel
    3.3-devel-el6
    3.3-devel-el7
    3.3-el6
    3.3-el7
    3.3-testing
    3.3-testing-el6
    3.3-testing-el7
    devel
    latest
    testing
)

usage () {
    echo "${0##*/} <WORKING-DIR>"
    echo "<WORKING-DIR> should be the working directory of a git clone of"
    echo "docker-osg-wn."

    exit 2
}

set -eu

if [[ $# -ne 1 ]]; then
    usage
fi

[[ -f update-one ]] || { echo "update-one not found" >&2; exit 1; }

update_one=$(mktemp --suffix=.sh)
trap "rm -f $update_one" EXIT
cp update-one $update_one
chmod +x $update_one

cd "$1"

for branch in ${branches[@]}; do
    git checkout $branch
    $update_one "$1"
done

echo "Verify everything is kosher and then run:"
echo "git push origin  ${branches[@]}"
